{"ast":null,"code":"var _jsxFileName = \"/Users/stephenholland/Development/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SkinRecognition from './components/SkinRecognition/SkinRecognition';\nimport Logo from './components/Logo/Logo';\nimport Clarifai from \"clarifai\";\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport ImageFileForm from './components/ImageFileForm/ImageFileForm';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Registers from './components/Registers/Registers';\nimport Diagnosis from './components/Diagnosis/Diagnosis';\nimport Particles from 'react-particles-js';\nimport axios from 'axios'; //import FaceDetect from \"./components/FaceDetect/FaceDetect\";\n\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 70,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}; // You need to add your own API key here from Clarifai.\n\nconst app = new Clarifai.App({\n  apiKey: \"e94b16ebf46741309ecb3eeef61e76a3\"\n});\n\nclass App extends Component {\n  constructor() {\n    super(); // to use this\n\n    this.calculateFaceLocation = data => {\n      console.log(\"inside face Location\");\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      }); //console.log(event.target.value);\n    };\n\n    this.onButtonSubmit = () => {\n      // set imageUrl state\n      this.setState({\n        imageUrl: this.state.input\n      });\n      console.log({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => // calculateFaceLocation function pass to displaybox as is parameter\n      this.displayFaceBox(this.calculateFaceLocation(response))) // if error exist console.log error\n      .catch(err => console.log(err));\n    };\n\n    this.fileSelectedHandler = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.fileUploadHandler = () => {\n      const formData = new FormData();\n      formData.append('data', this.state.selectedFile, this.state.selectedFile.name);\n      axios.post('https://www.nyckel.com/v0.9/functions/edx2ml1gbri4n34d/invoke', formData).then(res => {\n        console.log(res.data.name); // alert(res);\n\n        document.getElementById('result').innerHTML = res.data.name;\n      });\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'home',\n      selectedFile: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 6\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Diagnosis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(ImageFileForm, {\n          fileSelectedHandler: this.fileSelectedHandler,\n          fileUploadHandler: this.fileUploadHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(SkinRecognition, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 8\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(Registers, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stephenholland/Development/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","FaceRecognition","SkinRecognition","Logo","Clarifai","ImageLinkForm","ImageFileForm","Rank","SignIn","Registers","Diagnosis","Particles","axios","particlesOptions","particles","number","value","density","enable","value_area","app","App","apiKey","constructor","calculateFaceLocation","data","console","log","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","fileSelectedHandler","selectedFile","files","fileUploadHandler","formData","FormData","append","name","post","res","innerHTML","onRouteChange","route","render"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react';\n\nimport Navigation from './components/Navigation/Navigation';\n\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nimport SkinRecognition from './components/SkinRecognition/SkinRecognition';\n\nimport Logo from './components/Logo/Logo';\n\nimport Clarifai from \"clarifai\";\n\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\n\nimport ImageFileForm from './components/ImageFileForm/ImageFileForm';\n\nimport Rank from './components/Rank/Rank';\n\nimport SignIn from './components/SignIn/SignIn';\n\nimport Registers from './components/Registers/Registers';\n\n\nimport Diagnosis from './components/Diagnosis/Diagnosis';\n\nimport Particles from 'react-particles-js';\n\nimport axios from 'axios';\n\n//import FaceDetect from \"./components/FaceDetect/FaceDetect\";\n\n\n\n\nimport './App.css';\n\n\nconst particlesOptions =  {\n\n\n\n                particles: {\n                  number: {\n                    value: 70,\n                      density: {\n                      enable: true,\n                     value_area: 800\n                    }\n                  }\n                }\n              \n              \n }\n\n\n // You need to add your own API key here from Clarifai.\nconst app = new Clarifai.App({\n  apiKey: \"e94b16ebf46741309ecb3eeef61e76a3\",\n});\n\n\n\n\n\nclass App extends Component {\n\nconstructor(){\n  super() // to use this\n\n  this.state = {\n    input: '',\n     imageUrl: '',\n    box: {},\n    route: 'home',\n    selectedFile: null\n  }\n  \n}\n\n  calculateFaceLocation = (data) => {\n    console.log(\"inside face Location\");\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\ndisplayFaceBox = (box) => {\n  console.log(box);\n  this.setState({box: box});\n}\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value});\n//console.log(event.target.value);\n\n  }\n\n  onButtonSubmit = () => {\n\n      // set imageUrl state\n    this.setState({ imageUrl: this.state.input });\n    console.log({ imageUrl: this.state.input });\n \n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then((response) =>\n        // calculateFaceLocation function pass to displaybox as is parameter\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      )\n      // if error exist console.log error\n      .catch((err) => console.log(err));\n  };\n\n  fileSelectedHandler = event => {\n    this.setState(\n      {\n  \n    selectedFile: event.target.files[0]\n      }\n    )\n\n  \n    \n  }\n\n  fileUploadHandler = () => {\n  const formData = new FormData()\n  formData.append(\n    'data',\n    this.state.selectedFile,\n    this.state.selectedFile.name\n  )\n    axios.post('https://www.nyckel.com/v0.9/functions/edx2ml1gbri4n34d/invoke', formData).then(\n      res => {\n        console.log(res.data.name);\n       // alert(res);\n        document.getElementById('result').innerHTML = res.data.name;\n      }\n    );\n\n  }\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  }\n\n\n  render(){\n\n return (\n    <div className=\"App\">\n\n     { /*<input type=\"file\" onChange={this.fileSelectedHandler} />\n     <button onClick={this.fileUploadHandler} >Check </button>  */}\n\n\n           <Particles className = 'particles' params={particlesOptions}/>\n\n\n\n\n     <Navigation onRouteChange={this.onRouteChange}/>  \n         \n     { this.state.route === 'home' ?\n       \n       <div>\n       < Logo />\n      <Diagnosis/>\n         <Rank />\n         \n         {/*\n     <ImageLinkForm \n     onInputChange={this.onInputChange} \n       onButtonSubmit={this.onButtonSubmit} />\n    */}\n      <ImageFileForm \n     fileSelectedHandler={this.fileSelectedHandler} \n      fileUploadHandler={this.fileUploadHandler}\n     />\n\n     <SkinRecognition />\n\n     <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n         \n  \n     </div>\n       \n       : (\n         this.state.route === 'signin'\n           ? <SignIn onRouteChange={this.onRouteChange} />  \n           : <Registers onRouteChange={this.onRouteChange} />\n       )\n\n       \n       \n       \n     \n       \n     }\n\n     </div>\n  );\n\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}