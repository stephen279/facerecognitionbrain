{"ast":null,"code":"var _jsxFileName = \"/Users/stephenholland/Development/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport Clarifai from \"clarifai\";\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Diagnosis from './components/Diagnosis/Diagnosis';\nimport Particles from 'react-particles-js'; //import FaceDetect from \"./components/FaceDetect/FaceDetect\";\n\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 70,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}; // You need to add your own API key here from Clarifai.\n\nconst app = new Clarifai.App({\n  apiKey: \"e94b16ebf46741309ecb3eeef61e76a3\"\n});\n\nclass App extends Component {\n  constructor() {\n    super(); // to use this\n\n    this.calculateFaceLocation = data => {\n      console.log(\"inside face Location\");\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      }); //console.log(event.target.value);\n    };\n\n    this.onButtonSubmit = () => {\n      // set imageUrl state\n      this.setState({\n        imageUrl: this.state.input\n      });\n      console.log({\n        imageUrl: this.state.input\n      });\n      var data = new FormData();\n      data.append(\"data\", \"@/Users/stephenholland/Downloads/acne.jpg\");\n      var xhr = new XMLHttpRequest();\n      xhr.withCredentials = true;\n      xhr.addEventListener(\"readystatechange\", function () {\n        if (this.readyState === 4) {\n          console.log(this.responseText);\n        }\n      });\n      xhr.open(\"POST\", \"https://www.nyckel.com/v0.9/functions/edx2ml1gbri4n34d/invoke\");\n      xhr.send(data);\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => // calculateFaceLocation function pass to displaybox as is parameter\n      this.displayFaceBox(this.calculateFaceLocation(response))) // if error exist console.log error\n      .catch(err => console.log(err));\n    };\n\n    this.fileSelectedHandler = event => {\n      console.log(event.target.files(0));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      SelectedHandler\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: this.fileSelectedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Diagnosis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: this.state.box,\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stephenholland/Development/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","FaceRecognition","Logo","Clarifai","ImageLinkForm","Rank","Diagnosis","Particles","particlesOptions","particles","number","value","density","enable","value_area","app","App","apiKey","constructor","calculateFaceLocation","data","console","log","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","FormData","append","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","responseText","open","send","models","predict","FACE_DETECT_MODEL","then","response","catch","err","fileSelectedHandler","files","SelectedHandler","render"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react';\n\nimport Navigation from './components/Navigation/Navigation';\n\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nimport Logo from './components/Logo/Logo';\n\nimport Clarifai from \"clarifai\";\n\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\n\nimport Rank from './components/Rank/Rank';\n\nimport Diagnosis from './components/Diagnosis/Diagnosis';\n\nimport Particles from 'react-particles-js';\n\n//import FaceDetect from \"./components/FaceDetect/FaceDetect\";\n\n\n\n\nimport './App.css';\n\n\nconst particlesOptions =  {\n\n\n\n                particles: {\n                  number: {\n                    value: 70,\n                      density: {\n                      enable: true,\n                     value_area: 800\n                    }\n                  }\n                }\n              \n              \n }\n\n\n // You need to add your own API key here from Clarifai.\nconst app = new Clarifai.App({\n  apiKey: \"e94b16ebf46741309ecb3eeef61e76a3\",\n});\n\n\n\n\n\nclass App extends Component {\n\nconstructor(){\n  super() // to use this\n\n  this.state = {\n    input: '',\n     imageUrl: '',\n    box: {},\n     SelectedHandler\n  }\n  \n}\n\n  calculateFaceLocation = (data) => {\n    console.log(\"inside face Location\");\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\ndisplayFaceBox = (box) => {\n  console.log(box);\n  this.setState({box: box});\n}\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value});\n//console.log(event.target.value);\n\n  }\n\n  onButtonSubmit = () => {\n\n      // set imageUrl state\n    this.setState({ imageUrl: this.state.input });\n    console.log({ imageUrl: this.state.input });\n    \n    var data = new FormData();\ndata.append(\"data\", \"@/Users/stephenholland/Downloads/acne.jpg\");\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function() {\n  if(this.readyState === 4) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://www.nyckel.com/v0.9/functions/edx2ml1gbri4n34d/invoke\");\n\nxhr.send(data);\n\n\n\n\n\n\n\n\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then((response) =>\n        // calculateFaceLocation function pass to displaybox as is parameter\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      )\n      // if error exist console.log error\n      .catch((err) => console.log(err));\n  };\n\n  fileSelectedHandler = event => {\n\n    console.log(event.target.files(0));\n    \n  }\n\n\n  render(){\n\n return (\n    <div className=\"App\">\n\n     <input type=\"file\" onChange={this.fileSelectedHandler} />\n\n\n           <Particles className = 'particles' params={particlesOptions}/>\n\n\n\n\n     <Navigation/>\n     <Logo />\n      <Diagnosis/>\n       <Rank/>\n     <ImageLinkForm \n     onInputChange={this.onInputChange} \n     onButtonSubmit={this.onButtonSubmit}/>\n\n     <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n   \n\n    </div>\n  );\n\n  \n\n  }\n\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}