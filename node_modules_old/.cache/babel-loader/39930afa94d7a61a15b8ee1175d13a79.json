{"ast":null,"code":"var _jsxFileName = \"/Users/stephenholland/Development/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport Clarifai from \"clarifai\";\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Diagnosis from './components/Diagnosis/Diagnosis';\nimport Particles from 'react-particles-js'; //import FaceDetect from \"./components/FaceDetect/FaceDetect\";\n\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 70,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}; // You need to add your own API key here from Clarifai.\n\nconst app = new Clarifai.App({\n  apiKey: \"e94b16ebf46741309ecb3eeef61e76a3\"\n});\n\nclass App extends Component {\n  constructor() {\n    super(); // to use this\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n      console.log(event.target.value);\n    };\n\n    this.onButtonSubmit = () => {\n      // set imageUrl state\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(function (response) {\n        //   this.calculateFaceLocation(response)\n        // response data fetch from FACE_DETECT_MODEL \n        // this.displayFaceBox(this.calculateFaceLocation(response));\n        console.log(\"hi\");\n        /* data needed from the response data from clarifai API, \n           note we are just comparing the two for better understanding \n           would to delete the above console*/\n\n        console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n      }, function (err) {\n        console.log(err); // there was an error\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  calculateFaceLocation() {\n    // console.log(response);\n    //console.log(\"hi\");\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Diagnosis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: this.state.box,\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stephenholland/Development/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","FaceRecognition","Logo","Clarifai","ImageLinkForm","Rank","Diagnosis","Particles","particlesOptions","particles","number","value","density","enable","value_area","app","App","apiKey","constructor","displayFaceBox","box","console","log","setState","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","outputs","data","regions","region_info","bounding_box","err","calculateFaceLocation","clarifaiFace","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","render"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react';\n\nimport Navigation from './components/Navigation/Navigation';\n\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nimport Logo from './components/Logo/Logo';\n\nimport Clarifai from \"clarifai\";\n\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\n\nimport Rank from './components/Rank/Rank';\n\nimport Diagnosis from './components/Diagnosis/Diagnosis';\n\nimport Particles from 'react-particles-js';\n\n//import FaceDetect from \"./components/FaceDetect/FaceDetect\";\n\n\n\n\nimport './App.css';\n\n\nconst particlesOptions =  {\n\n\n\n                particles: {\n                  number: {\n                    value: 70,\n                      density: {\n                      enable: true,\n                     value_area: 800\n                    }\n                  }\n                }\n              \n              \n }\n\n\n // You need to add your own API key here from Clarifai.\nconst app = new Clarifai.App({\n  apiKey: \"e94b16ebf46741309ecb3eeef61e76a3\",\n});\n\n\n\n\n\nclass App extends Component {\n\nconstructor(){\n  super() // to use this\n\n  this.state = {\n    input: '',\n     imageUrl: '',\n     box:{},\n  }\n  \n}\n\n  calculateFaceLocation(){\n\n       // console.log(response);\n    //console.log(\"hi\");\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\ndisplayFaceBox = (box) => {\n  console.log(box);\n  this.setState({box: box});\n}\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value});\nconsole.log(event.target.value);\n\n  }\n\n  onButtonSubmit = () => {\n\n      // set imageUrl state\n    this.setState({ imageUrl: this.state.input });\n    app.models\n          .predict(\n            Clarifai.FACE_DETECT_MODEL, this.state.input).then(\n              function (response) {\n              \n                \n             //   this.calculateFaceLocation(response)\n\n        // response data fetch from FACE_DETECT_MODEL \n       // this.displayFaceBox(this.calculateFaceLocation(response));\n        console.log(\"hi\");\n        /* data needed from the response data from clarifai API, \n           note we are just comparing the two for better understanding \n           would to delete the above console*/ \n        console.log(\n          response.outputs[0].data.regions[0].region_info.bounding_box\n        );\n      },\n      function (err) {\n         console.log(err);\n        // there was an error\n      }\n    );\n  }\n\n  render(){\n\n return (\n    <div className=\"App\">\n\n\n           <Particles className = 'particles' params={particlesOptions}/>\n\n\n\n\n     <Navigation/>\n     <Logo />\n      <Diagnosis/>\n       <Rank/>\n     <ImageLinkForm \n     onInputChange={this.onInputChange} \n     onButtonSubmit={this.onButtonSubmit}/>\n\n     <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n   \n\n    </div>\n  );\n\n  \n\n  }\n\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}