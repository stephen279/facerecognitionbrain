{"ast":null,"code":"var _jsxFileName = \"/Users/stephenholland/Development/facerecognitionbrain/src/App.js\";\nimport React, { Component, useSate } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport Clarifai from \"clarifai\";\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Diagnosis from './components/Diagnosis/Diagnosis';\nimport Particles from 'react-particles-js'; //import FaceDetect from \"./components/FaceDetect/FaceDetect\";\n\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 70,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}; // You need to add your own API key here from Clarifai.\n\nconst app = new Clarifai.App({\n  apiKey: \"e94b16ebf46741309ecb3eeef61e76a3\"\n});\n\nclass App extends Component {\n  constructor() {\n    super(); // to use this\n\n    this.calculateFaceLocation = data => {\n      console.log(\"inside face Location\");\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      }); //console.log(event.target.value);\n    };\n\n    this.onButtonSubmit = () => {\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => // calculateFaceLocation function pass to displaybox as is parameter\n      this.displayFaceBox(this.calculateFaceLocation(response))) // if error exist console.log error\n      .catch(err => console.log(err));\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      fileName: ''\n    };\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n  }\n\n  handleInputChange(evt) {\n    this.setState({\n      fileName: this.fileInput.value ? this.fileInput.files[0].name : ''\n    });\n  }\n\n  render() {\n    document.querySelector('#root');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.handleInputChange,\n            ref: input => this.fileInput = input,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 5\n        }, this), this.state.fileName && /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mt-3\",\n          children: [\"File: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: this.state.fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Diagnosis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: this.state.box,\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stephenholland/Development/facerecognitionbrain/src/App.js"],"names":["React","Component","useSate","Navigation","FaceRecognition","Logo","Clarifai","ImageLinkForm","Rank","Diagnosis","Particles","particlesOptions","particles","number","value","density","enable","value_area","app","App","apiKey","constructor","calculateFaceLocation","data","console","log","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onButtonSubmit","models","predict","FACE_DETECT_MODEL","state","then","response","catch","err","handleSubmit","bind","handleInputChange","imageUrl","fileName","evt","preventDefault","fileInput","files","name","render","querySelector"],"mappings":"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","sourcesContent":["\nimport React, {Component,useSate} from 'react';\n\nimport Navigation from './components/Navigation/Navigation';\n\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nimport Logo from './components/Logo/Logo';\n\nimport Clarifai from \"clarifai\";\n\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\n\nimport Rank from './components/Rank/Rank';\n\nimport Diagnosis from './components/Diagnosis/Diagnosis';\n\nimport Particles from 'react-particles-js';\n\n//import FaceDetect from \"./components/FaceDetect/FaceDetect\";\n\n\n\n\nimport './App.css';\n\n\nconst particlesOptions =  {\n\n\n\n                particles: {\n                  number: {\n                    value: 70,\n                      density: {\n                      enable: true,\n                     value_area: 800\n                    }\n                  }\n                }\n              \n              \n }\n\n\n // You need to add your own API key here from Clarifai.\nconst app = new Clarifai.App({\n  apiKey: \"e94b16ebf46741309ecb3eeef61e76a3\",\n});\n\n\n\n\n\nclass App extends Component {\n\n  \n\nconstructor(){\n  super() // to use this\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\n  this.state = {\n    input: '',\n     imageUrl: '',\n    box: {},\n     fileName: ''\n  }\n  \n}\n  \n  handleSubmit (evt) {\n\t\tevt.preventDefault();\n  }\n  \n  handleInputChange (evt) {\n\t\tthis.setState({\n\t\t\tfileName: this.fileInput.value\n\t\t\t\t? this.fileInput.files[0].name\n\t\t\t\t: ''\n\t\t});\n\t}\n\n  calculateFaceLocation = (data) => {\n    console.log(\"inside face Location\");\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\ndisplayFaceBox = (box) => {\n  console.log(box);\n  this.setState({box: box});\n}\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value});\n//console.log(event.target.value);\n\n  }\n\n  onButtonSubmit = () => {\n\n\n\n\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then((response) =>\n        // calculateFaceLocation function pass to displaybox as is parameter\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      )\n      // if error exist console.log error\n      .catch((err) => console.log(err));\n  };\n\n\n  render() {\n    \n\n\tdocument.querySelector('#root')\n    return (\n   \n      \n\n       <div className=\"App\">\n   \n\n<form onSubmit={this.handleSubmit}>\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"file\"\n\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\tref={input => this.fileInput = input}\n\t\t\t\t\t\tclassName=\"form-control\" />\n\t\t\t\t</label>\n\t\t\t\t<br />\n\t\t\t\t{\n\t\t\t\t\tthis.state.fileName\n\t\t\t\t\t\t&& <h4 className=\"mt-3\">\n\t\t\t\t\t\t\t\tFile: <span className=\"text-danger\">{this.state.fileName}</span>\n\t\t\t\t\t\t\t</h4>\n\t\t\t\t}\n\t\t\t</form>\n\n\n\n   \n\n           <Particles className = 'particles' params={particlesOptions}/>\n\n\n\n\n     <Navigation/>\n     <Logo />\n      <Diagnosis/>\n       <Rank/>\n     <ImageLinkForm \n     onInputChange={this.onInputChange} \n     onButtonSubmit={this.onButtonSubmit}/>\n\n     <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n   \n\n    </div>\n  );\n\n  \n\n  }\n  \n\n\n\n}\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}